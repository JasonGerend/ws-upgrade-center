<!--Pre-migration overview-->

As you prepare for migrating your SQL Server database to Azure SQL Database Managed Instance, be sure to consider the versions of SQL Server that are supported and to address any prerequisites to help ensure a successful migration.

**Important**: Also be sure to check out the white paper [Choosing your database migration path to Azure](https://aka.ms/dbmigratewp) for additional information and recommendations.

### Supported versions

This section describes all supported scenarios and options for an upgrade from on-premise SQL Server versions to Azure SQL Database Managed Instance. This information is current as of April 2018.

The following SQL Server sources are included:
* SQL Server 2005
* SQL Server 2008 and SQL Server 2008 R2
* SQL Server 2012
* SQL Server 2014
* SQL Server 2016
* SQL Server 2017

The following Azure target is included:
* Azure SQL Database Managed Instance

The following data migration options are discussed:
*	Transactional replication
*	Data Migration toolset [Azure Database Migration Service (Azure DMS)]
*	Bulk load

#### From SQL Server 2005
*	Migration Tools: Migration is supported by Azure DMS.
*	Bulk load: Tables can be bulk copied out from SQL Server 2005 and then bulk copied into Azure SQL Database Managed Instance.

#### From SQL Server 2008 or SQL Server 2008 R2
*	Migration Tools: Migration is supported by Azure DMS.
*	Bulk load: Tables can be bulk copied out from SQL Server 2008 or SQL Server 2008 R2 and then bulk copied into Azure SQL Database Managed Instance.

#### From SQL Server 2012
*	Transactional replication: Transactional replication from SQL Server 2012 to Azure SQL Database Managed Instance is supported; SQL Server 2012 version needs to be SP2 CU8 or SP3 or later.
*	Migration Tools: Migration is supported by Azure DMS.
*	Bulk load: Tables can be bulk copied out from SQL Server 2012 and then bulk copied into Azure SQL Database Managed Instance.

#### From SQL Server 2014
*	Transactional replication: Transactional replication from SQL Server 2014 to Azure SQL Database Managed Instance is supported; SQL Server 2014 version needs to be RTM CU10 or later, or SP1 CU3 or later.
*	Migration Tools: Migration is supported by Azure DMS.
*	Bulk load: Tables can be bulk copied out from SQL Server 2014 and then bulk copied into Azure SQL Database Managed Instance.

#### From SQL Server 2016
*	Transactional replication: Transactional replication from SQL Server 2016 to Azure SQL Database Managed Instance is supported.
*	Migration Tools: Migration is supported by Azure DMS.
*	Bulk load: Tables can be bulk copied out from SQL Server 2016 and then bulk copied into Azure SQL Database Managed Instance.

#### From SQL Server 2017
*	Transactional replication: Transactional replication from SQL Server 2017 to Azure SQL Database Managed Instance is supported.
*	Bulk load: Tables can be bulk copied out from SQL Server 2017 and then bulk copied into Azure SQL Database Managed Instance.

### Additional resources

Be sure to check out the [Azure Total Cost of Ownership (TCO) Calculator (Preview)](https://aka.ms/azure-tco) to help estimate the cost savings you can realize by migrating your workloads to Azure.

### Prerequisites

* Create a VNET for the Azure Database Migration Service by using the Azure Resource Manager deployment model, which provides site-to-site connectivity to your on-premises source servers by using either [ExpressRoute](https://docs.microsoft.com/azure/expressroute/expressroute-introduction) or [VPN](https://docs.microsoft.com/azure/vpn-gateway/vpn-gateway-about-vpngateways). You can learn more in the article [Network topologies for Azure SQL DB Managed Instance migrations using the Azure Database Migration Service](https://docs.microsoft.com/en-us/azure/dms/resource-network-topologies).
* Ensure that your Azure Virtual Network (VNET) Network Security Group rules do not block the following communication ports 443, 53, 9354, 445, 12000. For more detail on Azure VNET NSG traffic filtering, see the article [Filter network traffic with network security groups](https://docs.microsoft.com/en-us/azure/virtual-network/virtual-networks-nsg).
* Configure your Windows Firewall for source database engine access. For more information, see the article [Configure a Windows Firewall for Database Engine Access](https://docs.microsoft.com/sql/database-engine/configure-windows/configure-a-windows-firewall-for-database-engine-access).
* Open your Windows Firewall to allow the Azure Database Migration Service to access the source SQL Server, which by default is TCP port 1433.
* If you are running multiple named SQL Server instances using dynamic ports, you may wish to enable the SQL Browser Service and allow access to UDP port 1434 through your firewalls so that the Azure Database Migration Service can connect to a named instance on your source server.
* If you are using a firewall appliance in front of your source databases, you may need to add firewall rules to allow the Azure Database Migration Service to access the source database(s) for migration, as well as files via SMB port 445.
* Create an Azure SQL Database Managed Instance by following the detail in the article [Create an Azure SQL Database Managed Instance in the Azure portal](https://aka.ms/sqldbmi).
* Ensure that the logins used to connect the source SQL Server and target Managed Instance are members of the sysadmin server role.
* Create a network share that the Azure Database Migration Service can use to back up the source database.
* Ensure that the service account running the source SQL Server instance has write privileges on the network share that you created and that the computer account for the source server has read/write access to the same share.
* Make a note of a Windows user (and password) that has full control privilege on the network share that you previously created. The Azure Database Migration Service impersonates the user credential to upload the backup files to Azure storage container for restore operation.
* Create a blob container and retrieve its SAS URI by using the steps in the article [Manage Azure Blob Storage resources with Storage Explorer](https://docs.microsoft.com/en-us/azure/vs-azure-tools-storage-explorer-blobs#get-the-sas-for-a-blob-container), and be sure to select all permissions (Read, Write, Delete, List) on the policy window while creating the SAS URI. This detail provides the Azure Database Migration Service with access to your storage account container for uploading the backup files used for migrating databases to Azure SQL Database Managed Instance.
