<!--Pre-migration overview-->

As you prepare for migrating your SQL Server database to Azure SQL Database, be sure to consider the versions of SQL Server that are supported and to address any prerequisites to help ensure a successful migration.

**Important**: Also be sure to check out the white paper [Choosing your database migration path to Azure](https://aka.ms/dbmigratewp) for additional information and recommendations.

### Supported versions

This section describes all supported scenarios and options for an upgrade from on-premise SQL Server versions to Azure SQL Database. This information is current as of April 2018.

The following SQL Server sources are included:
* SQL Server 2005
* SQL Server 2008 and SQL Server 2008 R2
* SQL Server 2012
* SQL Server 2014
* SQL Server 2016
* SQL Server 2017

You can migrate SQL Server running on-premises or on:

* SQL Server on Virtual Machines
* Amazon Web Services (AWS) EC2
* Compute Engine (GCP), and
* AWS RDS

The following Azure target is included:
* Azure SQL Database

The following data migration options are discussed:
*	Transactional replication
*	Data Migration toolset [Azure Database Migration Service (Azure DMS) and Data Migration Assistant (DMA)]
*	Bulk load

#### From SQL Server 2005
*	Migration Tools: Migration is supported by Azure DMS and DMA.
*	Bulk load: Tables can be bulk copied out from SQL Server 2005 and then bulk copied into Azure SQL Database.

#### From SQL Server 2008 or SQL Server 2008 R2
*	Migration Tools: Migration is supported by Azure DMS and DMA.
*	Bulk load: Tables can be bulk copied out from SQL Server 2008 or SQL Server 2008 R2 and then bulk copied into Azure SQL Database.

#### From SQL Server 2012
*	Transactional replication: Transactional replication from SQL Server 2012 to Azure SQL Database is supported; SQL Server 2012 version needs to be SP2 CU8 or SP3 or later.
*	Migration Tools: Migration is supported by Azure DMS and DMA.
*	Bulk load: Tables can be bulk copied out from SQL Server 2012 and then bulk copied into Azure SQL Database.

#### From SQL Server 2014
*	Transactional replication: Transactional replication from SQL Server 2014 to Azure SQL Database is supported; SQL Server 2014 version needs to be RTM CU10 or later, or SP1 CU3 or later.
*	Migration Tools: Migration is supported by Azure DMS and DMA.
*	Bulk load: Tables can be bulk copied out from SQL Server 2014 and then bulk copied into Azure SQL Database.

#### From SQL Server 2016
*	Transactional replication: Transactional replication from SQL Server 2016 to Azure SQL Database is supported.
*	Migration Tools: Migration is supported by Azure DMS and DMA.
*	Bulk load: Tables can be bulk copied out from SQL Server 2016 and then bulk copied into Azure SQL Database.

#### From SQL Server 2017
*	Transactional replication: Transactional replication from SQL Server 2017 to Azure SQL Database is supported.
*	Bulk load: Tables can be bulk copied out from SQL Server 2017 and then bulk copied into Azure SQL Database.

### Additional resources

* [SQL migration using Azure Data Migration Service (DMS)](https://www.microsoft.com/handsonlabs/SelfPacedLabs/?storyGuid=3b671509-c3cd-4495-8e8f-354acfa09587) hands-on lab.
* Be sure to check out the [Azure Total Cost of Ownership (TCO) Calculator (Preview)](https://aka.ms/azure-tco) to help estimate the cost savings you can realize by migrating your workloads to Azure.

### Prerequisites

Before beginning your migration project, it is important to address the associated prerequisites.

If your source database is running SQL Server on-premises or on SQL Server on Virtual Machines, the following prerequisites apply:

* Enable the TCP/IP protocol, which is disabled by default during SQL Server Express installation, by following the instructions in the article [Enable or Disable a Server Network Protocol](https://docs.microsoft.com/sql/database-engine/configure-windows/enable-or-disable-a-server-network-protocol#SSMSProcedure).
* Create an instance of Azure SQL Database instance, which you do by following the detail in the article [Create an Azure SQL database in the Azure portal](https://docs.microsoft.com/azure/sql-database/sql-database-get-started-portal).
* Download and install the [Data Migration Assistant](https://www.microsoft.com/download/details.aspx?id=53595) v3.3 or later.
* Create a VNET for the Azure Database Migration Service by using the Azure Resource Manager deployment model, which provides site-to-site connectivity to your on-premises source servers by using either ExpressRoute (see the article [ExpressRoute Overview](https://docs.microsoft.com/azure/expressroute/expressroute-introduction)) or VPN (see the article [What is VPN gateway](https://docs.microsoft.com/azure/vpn-gateway/vpn-gateway-about-vpngateways)).
* Ensure that your Azure Virtual Network (VNET) Network Security Group rules do not block the following communication ports 443, 53, 9354, 445, 12000. For more detail on Azure VNET NSG traffic filtering, see the article [Filter network traffic with network security groups](https://docs.microsoft.com/en-us/azure/virtual-network/virtual-networks-nsg).
* Configure your Windows Firewall for database engine access by following the steps in the article [Configure a Windows Firewall for Database Engine Access](https://docs.microsoft.com/sql/database-engine/configure-windows/configure-a-windows-firewall-for-database-engine-access).
* Open your Windows firewall to allow the Azure Database Migration Service to access the source SQL Server, which by default is TCP port 1433.
* If you are running multiple named SQL Server instances using dynamic ports, you may wish to enable the SQL Browser Service and allow access to UDP port 1434 through your firewalls so that the Azure Database Migration Service can connect to a named instance on your source server.
* When using a firewall appliance in front of your source database(s), you may need to add firewall rules to allow the Azure Database Migration Service to access the source database(s) for migration.
* Create a server-level firewall rule using the steps in the article [Azure SQL Database and SQL Data Warehouse firewall rules](https://docs.microsoft.com/azure/sql-database/sql-database-firewall-configure) for the Azure SQL Database server to allow the Azure Database Migration Service access to the target databases. Provide the subnet range of the VNET used for the Azure Database Migration Service.
* Ensure that the credentials used to connect to source SQL Server instance have CONTROL SERVER permissions. See the article [GRANT Server Permissions (Transact-SQL)](https://docs.microsoft.com/sql/t-sql/statements/grant-server-permissions-transact-sql) for more information.
* Ensure that the credentials used to connect to target Azure SQL Database instance have CONTROL DATABASE permission on the target Azure SQL databases.
